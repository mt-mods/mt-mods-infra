---
- hosts: all
  remote_user: root

  vars:
    compose_directory: /data/mt-mods-infra
    template_files:
      - "docker-compose.yml"
      - "Dockerfile.nodered"
      - "config/matterbridge.toml"
      - "config/remotenickformat.tengo"
      - "config/nodered.js"

  tasks:
    - name: Create config directory
      file:
        path: "{{ compose_directory }}/config"
        state: directory

    - name: Calculate previous checksums
      stat:
        path: "{{ compose_directory }}/{{ item }}"
      register: "previous_hash"
      with_items: "{{ template_files }}"

    - name: Copy and template files
      template:
        src: "{{ item }}"
        dest: "{{ compose_directory }}/{{ item }}"
      with_items: "{{ template_files }}"

    - name: Calculate current checksums
      stat:
        path: "{{ compose_directory }}/{{ item }}"
      register: "current_hash"
      with_items: "{{ template_files }}"

    - name: Create nodered directory
      file:
        path: "{{ compose_directory }}/data/nodered"
        state: directory
        owner: "1000"
        group: "1000"

    - name: Configure services
      shell:
        cmd: "docker-compose up -d --remove-orphans"
        chdir: "{{ compose_directory }}"

    - name: Matterbridge restart
      shell:
        cmd: "docker-compose restart matterbridge"
        chdir: "{{ compose_directory }}"
      when: previous_hash.results[2].stat.exists and previous_hash.results[2].stat.checksum != current_hash.results[2].stat.checksum

    - name: NodeRED restart
      shell:
        cmd: "docker-compose restart mt-mods-nodered"
        chdir: "{{ compose_directory }}"
      when: previous_hash.results[4].stat.exists and previous_hash.results[4].stat.checksum != current_hash.results[4].stat.checksum
